/* selector global */
* {
  box-sizing: content-box;
}
body,
html {
  padding: 0;
  margin: 0;
}

body {
  background-color: rgb(255, 157, 157);
}
.myli {
  background-color: azure;
  color: rgb(227, 248, 241);
}
/* con el punto es el selector del class que creamos en etiquetas de html*/
header {
  color: rgb(214, 194, 42);
  background-color: rgb(227, 221, 135);
}

.content-content-box > div {
  background: rgb(214, 194, 75);
  width: 300px;
  height: 30px;
  margin: 30px;
  border: 5px solid rgb(137, 28, 28);
}

/* este es todo el elemento de header */
#article-1 {
  background-color: rgb(235, 194, 42);
}
/* este es el selector de id  */

#myp {
  color: blueviolet;
}
.myp {
  font-size: 24px;
}
.back {
  background-color: beige;
}
.color-rojo-back-azul {
  color: brown;
  background-color: blue;
}

/*
.div-embebido {
  background-color: rgb(190, 116, 212);
}
*/

/* MODELO DE CAJA - DIV */
.contenedor {
  margin: 50px;
  /* espacio entre el ... */
  background-color: brown;
  padding: 10px;
  /* espacio entre el borde y el contenido */
  border: 5px solid red;
  /* borde  */
  color: green;
}
.contenido {
  /*margin: 100px;*/
  background-color: rgb(164, 106, 106);
}

.contenedor-con-imagen {
  width: 400px;
  height: 400px;
  padding: 20px;
  background-color: aqua;
  background-image: url("/public/imagen1.jpg");
  background-size: cover;
  background-position: center;
  /* para insertar una imagen dentro del background */
  text-align: center;
}

.contenido-con-imagen {
  background-color: rgb(199, 193, 193);
}
/* selectores */

/* selector por elemento */
span {
  font-weight: bold;
}
/* se asignan los mismos estilos a elementos con nombres diferentes
en este caso, la regla afecta a todos los elementos p y span  */
p,
span {
  color: rgb(135, 104, 172);
}
/* afecta solo a los elementos p que se encuentran dentro de main, ya sea contenido directo o indirecto */
main p {
  background-color: rgb(112, 41, 41);
}

/* se usa > para referenciar a un elemento que es hijo directo */
.contenedor-parrafo > p {
  font-size: 35px;
}

/* este selector hace referencia a elementos que están precedidos por otros elementos; ambos deben estar al mismo nivel */
h1 + p {
  color: red;
}

/* Estilos más usados */
/* declara el tipo de letra que se usa para mostrar en un texto, Se pueden declarar múltiples valores separados popr coma para ofrecer al navegador varias alternativas en casi que alguna no se encuentre disponible */
.container {
  border-top: 1px solid rgb(220, 102, 102);
  padding: 20px;
  font-family: Georgia, "Times New Roman", Times, serif;
  color: white;
  /* acá le ofrecemos alternativas de fuentes */
}

.container > .content > p {
  background-color: rgb(158, 123, 188);
  color: black;
  font-size: 25px;
  /* determina el tamaño de la fuente; puede estar en pixeles px, puntos pt, porcentaje %, rem proporcion al archivo */
  font-weight: 100;
  /* puedo usar bold (negrita) o valores desde el 100 al 1000 */
  font-style: oblique;
  /* normal, italic, oblique */
}
.content > h3 {
  background-color: antiquewhite;
  font: bold 30px Arial, sans-serif;
  /* permite declarar varios atributos al mismo tiempo, separador por espacios, primero el grosor, luego tamaño, luego tipo de fuente */
  text-align: center;
  line-height: 30px;
  /* define el espacio entre lineas */
  color: rgb(146, 52, 52);
}

.mydiv {
  height: 100px;
  width: 100px;
  border: 1px solid black;
  padding: 20px;
  background-color: rgb(219, 224, 148);
  text-align: center;
  background-image: url("/public/450_1000.jpeg");
}

.div-in-mydiv {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: rgba(225, 225, 225, 10);
}

.div-in-mydiv-2 {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: #d6a2d4;
}

/* tamaños */

.div-in-mydiv-3 {
  height: 50px;
  width: 50px;
  /*margin-top: 20px;
  /* para que el margen sea desde arriba */
  margin: 20px 0;
  border: 1px solid black;
  background-color: #a3d397;
}
.tamano {
  margin: 100px 20px;
  height: 200px;
  width: 200px;
  background-color: black;
}

.content {
  /*height: 400px;
  width: 200px;*/
  font-size: 30px;
}

.tamano-hijo {
  height: 25%;
  width: 25%;
  /* estos porcentajes son el relacion al elemento que lo contiene */
  background-color: rgb(255, 255, 255);
}

.div-vh-vw {
  height: 100vh;
  width: calc(100vw - 40px);
  background-color: rgb(79, 79, 123);
}
.punto {
  height: 100pt;
  width: 100pt;
  background-color: rgb(183, 67, 67);
}
.div-rem {
  height: 20rem;
  /* en relacion a la fuente de todo el html */
  width: 20rem;
  background-color: rgb(98, 207, 98);
}
.div-em {
  height: 20em;
  width: 20em;
  background-color: rgb(83, 203, 212);
}
._contenedor {
  background-color: red;
  width: 500px;
  height: 500px;
}
._contenido {
  background-color: green;
  width: 200px;
  height: 200px;
  max-height: 200px;
  /* maximo de alto */
  max-width: 200px;
  /* maximo de ancho */
  overflow-x: auto;
  /* puede ser auto, scroll, hidden */
  overflow-y: hidden;
}
._otrocontenido {
  background-color: blue;
  width: 150px;
  height: 150px;
}
.contenido-grande {
  height: 400 px;
  width: 400px;
  background-color: chocolate;
}
.contenedor-de-bordes > div {
  height: 100px;
  width: 100px;
  border-width: 5px;
  border-style: dotted;
  border-color: #9e1717;
  border-radius: 50%;
  margin-top: 20px;
}
.borde-1 {
  border-style: dashed !important;
}
.borde-2 {
  border-style: double !important;
}
.borde-3 {
  border-style: outset !important;
}
.borde-4 {
  border-style: solid !important;
}
.borde-en-una-linea {
  border: 10px solid rgb(179, 37, 167);
  /* 1. tamaño de linea (border-with) 2. estilo de borde 3. color */
  border-radius: 60px;
  height: 100px;
  width: 100px;
  margin-top: 20px;
}

.flex-container {
  display: flex;
  /* flex-direction: row; column; reverse, column-reverse, row-reverse */
  /*flex-direction: column-reverse;*/
  flex-wrap: wrap;
  /* wrap: se ajusta al tamaño de la pantalla.
  no wrap: se ajusta al ancho de la pantalla
  wrap reverse: lo mismo de wrap pero con los items ordenados al revez 
  flex-flow: row wrap;
  justify-content: end;*/
  /* combinacion de flex-direction con flex-wrap */
  align-content: space-between;
  font-size: 30px;
  border: 1px solid rgb(174, 255, 0);
  padding: 10px;
}
/* no se ve */

.flex-container > div {
  margin: 10px;
  background-color: #d8f186;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
  /* distancia que ocupa cada componente en cada salto de linea */
  height: 70px;
}

.contenedor-perfecto {
  display: flex;
  background-color: #c76fc5;
  height: 40vh;
  width: 40vw;
  justify-content: center;
  align-items: center;
}

.contenido-perfecto {
  display: flex;
  background-color: #88ce88;
  height: 100px;
  width: 100px;
  align-items: center;
  justify-content: center;
}

/* SELECTOR HIJO */

.flex-container-2 {
  display: flex;
  flex-wrap: wrap;
  align-content: space-around;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;
  align-items: stretch;
}

.flex-container-2 > div {
  background-color: #007fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
  height: 70px;
}

.flex-container-2 > div:nth-child(1) {
  order: 3;
  /* establece el orden de los elementos */
  flex-grow: 1;
  background-color: rgb(142, 64, 64);
}

.flex-container-2 > div:nth-child(2) {
  order: 1;
  flex-grow: 5;
  background-color: rgb(93, 93, 138);
}

.flex-container-2 > div:nth-child(3) {
  order: 2;
  flex-grow: 5;
  background-color: rgb(135, 96, 172);
}

/* FLEX - SHRINK */
/* determina cuanto se puede encoger un elemento en relacion a los demas dentro de un contenedor flex */

.flex-container-3 {
  display: flex;
  align-items: stretch;
  background-color: #ddd;
}

.flex-container-3 > div {
  background-color: #88ce88;
  color: white;
  margin: 10px;
  text-align: center;
  line-height: 70px;
  font-size: 30px;
  padding: 20px;
  width: 100px;
}

.flex-container-3 > div:nth-child(2) {
  flex-shrink: 6;
}

.flex-container-3 > div:nth-child(3) {
  flex-basis: 200px;
}

/* GRID */

.container-grid {
  display: grid;
  /*grid-template-columns: 5fr 1fr 1fr;*/
  /* indica la proporcion que tendrá cada elemento */
  /* grid-template-columns: 2fr 400px 1fr 1fr; */
  /* si no incluyo más indicadores de cada espacio por cada item se agregará a la fila y no a la columna*/
}
.item {
  background-color: cornflowerblue;
  color: white;
  padding: 20px;
  font-size: 20px;
  border: 3px solid #1843c3;
}

.grid-columns {
  /* grid-template-columns: 2fr 400px 1fr; */
  grid-template-columns: repeat(4, 1fr);
  /* acá repite 1fr 1fr 1fr */
}

.grid-rows {
  grid-template-rows: 1fr 50% 1fr;
}

.grid-rows-columns {
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: repeat(3, 1fr);
}
/* no funciona */

.primero {
  grid-column-start: 1;
  /* desde donde comienza */
  grid-column-end: 3;
  /* no es que ocupe el espacio 3 sino que se detiene en el 3, usando el 2 */
  grid-row-start: 1;
  grid-row-end: 3;
}

.estructura {
  height: 100vh;
  width: 100vw;
  grid-template-areas:
    "_header _header"
    "_sidebar _main"
    "_footer _footer";
  grid-template-rows: 50px 1fr 80px;
  grid-template-columns: 300px 1fr;
}

._header {
  grid-area: _header;
  background-color: #d8f186;
  color: rgb(81, 39, 143);
}

._sidebar {
  grid-area: _sidebar;
  background-color: #c76fc5;
  color: rgb(81, 39, 143);
}

._main {
  grid-area: _main;
  background-color: #d6a2d4;
  color: rgb(81, 39, 143);
}
._footer {
  grid-area: _footer;
  background-color: #a3d397;
  color: rgb(81, 39, 143);
}

.responsive {
  display: grid;
  /* grid-template-columns: minmax(100px, 200px) 1fr 1fr; */
  grid-template-columns: repeat(3, minmax(100px, 200px));
  /*  quiero que el elemento como minimo tenga 100px y como maximo 200px */
  /* grid-template-columns: 1fr 1fr 1fr; */
  grid-template-rows: repeat(1, minmax(100px, 200px));
  border: 3px solid #d8f186;
  padding: 15px;
  gap: 15px;
}

.responsive > div {
  background-color: #d8f186;
  color: rgb(81, 39, 143);
  padding: 30px;
}
